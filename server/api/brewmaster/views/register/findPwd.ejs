<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="renderer" content="webkit">
  <title><%= title %></title>
  <link rel="shortcut icon" href="<%= favicon %>" type="image/x-icon"/>
  <link href="/static/dist/uskin/<%= uskinFile %>" rel="stylesheet">
  <style>
    body { width: 100%; height: 100%; overflow: hidden; position: relative; margin: 0; padding: 0; background-color: #0d1b30; -webkit-tap-highlight-color: transparent; }
    .wrapper { width: 100%; height: 100%; display: flex; flex-direction: column; }
    .wrapper > .header { flex: 1; }
    .wrapper > .content { margin: 0 auto; width: 500px; height: auto; }
    .wrapper > .content > .img-wrapper { text-align: center; }
    .wrapper > .content > .img-wrapper > img { height: 50px; }
    .wrapper > .content > .content-wrapper > h4 { margin-top: 80px; color: #42b9e5; }
    .wrapper > .content > .content-wrapper > form > div { position: relative; background: none; width: 100%; height: 36px; }
    .wrapper > .content > .content-wrapper > form > div:first-child { margin-top: 34px; }
    .wrapper > .content > .content-wrapper > form > div:not(:first-child) { margin-top: 12px; }
    .wrapper > .content > .content-wrapper > form > div > input { border: none; background: rgba(255, 255, 255, 0.1); color: #92959a; width: 480px; height: 28px; font-size: 14px; }
    .wrapper > .content > .content-wrapper > form > div:nth-child(3) > input { display: inline-block; width: 366px; }
    .wrapper > .content > .content-wrapper > form > div:nth-child(3) > .get_captcha { display: inline-block; margin-left: 10px; width: 100px; height: 34px; line-height: 34px; background-color: #42b9e5; border-radius: 2px; color: #fff; font-size: 14px; text-align: center; cursor: pointer; }
    .wrapper > .content > .content-wrapper > form > div:nth-child(3) > .disabled { background-color: #d5dddf; color: #939ba3; }
    .wrapper > .content > .content-wrapper > form > input { margin-top: 14px; width: 480px; height: 28px; font-size: 14px; border: none; background-color: #42b9e5; color: #ffffff; }
    .wrapper > .content > .content-wrapper > form > #usubmit[disabled] { color: #939ba3; background-color: #d5dddf; } 
    .wrapper > .content > .content-wrapper > a {display:block;margin-top: 6px;float: right;}
    .phone_tip,
    .captcha_tip,
    .pwd_tip,
    .confirm_pwd_tip { margin-top: 4px; color: red; font-size: 12px; display: none; }
    .brewmaster_icon { position: absolute; top: 6px; right: 10px; width: 18px; height: 24px; background: url(/static/assets/login/brewmaster_icons.png); background-size: 114px 36px; }
    .icon_phone { background-position: -36px -6px; }
    .icon_captcha { right: 124px !important; background-position: -62px -6px; }
    .icon_pwd { background-position: -90px -6px; }
    .wrapper .content .content-wrapper form div.msg-tip { margin-top: 8px; color: #3a9c7b; font-size: 12px; height: 20px;}
    .wrapper .content .content-wrapper form div.msg-tip.error { color: red; }
    .wrapper > .footer { flex: 2; }
    .wrapper > .footer > p { position: absolute; width: 100%; text-align: center; color: #fff; bottom: 10px; }

    .mask {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(255, 255, 255, 0.4);
      display: none;
    }
    .mask .modal {
      width: 400px;
    }
    .mask .modal .modal-hd {
      line-height: 46px;
      font-size: 18px;
      font-weight: 400;
    }
    .mask .modal .input-row {
      margin: 20px 0 10px 30px;
      height: 70px;
      line-height: 70px;
      vertical-align: middle;
    }
    .mask .modal .input-row input {
      vertical-align: middle;
      width: 120px;
    }
    .mask .modal .input-row img {
      width: 180px;
      vertical-align: middle;
      height: 60px;
      margin-left: 15px;
    }
    .mask .modal .captcha-error-tip {
      display: none;
      height: 22px;
      line-height: 22px;
      color: red;
      margin: 10px 0 0 30px;
    }
  </style>
</head>
<body>
<% if (locale == 'en') { %>
<div class="wrapper">
  <div class="header"></div>
  <div class="content">
    <div class="img-wrapper">
      <img src="<%= single_logo_url %>"/>
    </div>
    <div class="content-wrapper">
      <h4>Reset Password</h4>
      <form id="uform" method="post" action="/auth/password/reset">
        <div>
          <input id="phone" name="phone" type="text" placeholder="please enter phone number" autofocus="autofocus"/>
          <div class="brewmaster_icon icon_phone"></div>
        </div>
        <span class="phone_tip"></span>
        <div>
          <input id="captcha" name="captcha" type="text" placeholder="please enter captcha"/>
          <div id="get_captcha" class="get_captcha">get captcha</div>
          <div class="brewmaster_icon icon_captcha"></div>
        </div>
        <span class="captcha_tip"></span>
        <div>
          <input id="pwd" name="pwd" type="password" placeholder="please enter new password"/>
          <div class="brewmaster_icon icon_pwd"></div>
        </div>
        <span class="pwd_tip"></span>
        <div>
          <input id="confirm_pwd" name="confirm_pwd" type="password" placeholder="please confirm your password"/>
          <div class="brewmaster_icon icon_pwd"></div>
        </div>
        <span class="confirm_pwd_tip"></span>
        <div class="msg-tip" id="msg-tip"></div>
        <input id="usubmit" name="usubmit" type="submit" value="submit"/>
      </form>
      <a href="/">Login</a>
    </div>
  </div>
  <div class="footer">
    <p><%= company %></p>
  </div>
</div>
<div class="mask" id="mask">
  <div class="modal" id="modal">
    <div class="modal-content-wrapper">
      <div class="modal-hd">Please enter the image captcha</div>
      <div class="input-row">
        <input type="text" name="pic-captcha" id="pic-captcha" placeholder="Captcha">
        <img src="/api/captcha?123456" alt="" class="image-captcha" id="image-captcha">
      </div>
      <div class="captcha-error-tip" id="captcha-error-tip">Captcha format is incorrect, please check your input</div>
      <div class="modal-ft">
        <button id="submit-pic-captcha" class="submit-pic-captcha btn">Confirm</button>
        <button id="modal-cancel" class="modal-cancel btn btn-cancel">Cancel</button>
      </div>
    </div>
  </div>
</div>
<script src="/static/dist/crypto-js/crypto-js.min.js"></script>
<script>
  var phone = document.getElementById('phone'),
          captcha = document.getElementById('captcha'),
          get_captcha = document.getElementById('get_captcha'),
          pwd = document.getElementById('pwd'),
          confirm_pwd = document.getElementById('confirm_pwd'),
          usubmit = document.getElementById('usubmit'),
          phone_tip = document.getElementsByClassName('phone_tip')[0],
          captcha_tip = document.getElementsByClassName('captcha_tip')[0],
          pwd_tip = document.getElementsByClassName('pwd_tip')[0],
          confirm_pwd_tip = document.getElementsByClassName('confirm_pwd_tip')[0],
          msg_tip = document.getElementById('msg-tip');
          uform = document.getElementById('uform'),
          mask = document.getElementById('mask'),
          modal = document.getElementById('modal'),
          picSubBtn = document.getElementById('submit-pic-captcha'),
          picCaptcha = document.getElementById('pic-captcha'),
          captchaImage = document.getElementById('image-captcha'),
          captchaErrorTip = document.getElementById('captcha-error-tip'),
          modalCancelBtn = document.getElementById('modal-cancel'),
          enable_getcaptcha = true,
          enable_phone = false,
          enable_captcha = false,
          enable_pwd = false,
          enable_confirm_pwd = false,
          timer = null,
          countdown = 4,
          countdownTimer = null,
          encryptionKey = null;

  get_captcha.onclick = showModal;
  picSubBtn.onclick = sendCaptcha;
  usubmit.onclick = verifySubmit;
  captchaImage.onclick = updateCaptcha;
  mask.onclick = hideMask;
  modalCancelBtn.onclick = hideMask;
  picCaptcha.onkeydown = function(evt) {
    if(evt.key === 'Enter') {
      sendCaptcha();
    }
  }

  modal.onclick = function(evt) {
    evt.stopPropagation();
  };

  resetModal();

  function resetModal() {
    var random = Date.now().toString().slice(-6);
    picCaptcha.value = '';
    picSubBtn.disabled = false;
    captchaImage.src = '/api/captcha?' + random;
    captchaErrorTip.style.display = 'none';
  }

  function showModal() {
    if(enable_getcaptcha) {
      if(/^\d{11}$/.test(phone.value)) {
        phone_tip.style.display = "none";
        mask.style.display = 'block';
        picCaptcha.focus();
      } else {
        phone_tip.innerHTML = 'please confirm the format of the phone';
        phone_tip.style.display = 'block';
      }
    }
  }

  function sendCaptcha() {
    var count = 60;

    var picCaptchaLegal = checkPicCaptcha();
    if (!picCaptchaLegal) {
      captchaErrorTip.style.display = 'block';
      return;
    }

    picSubBtn.disabled = true;
    var phoneData = JSON.stringify({
      'phone': phone.value,
      'captcha': picCaptcha.value
    });

    get_captcha.className += ' disabled';

    var req = createXMLHTTPRequest();
    req.open("POST", "/api/password/reset/phone-captcha", true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send(phoneData);
    req.onreadystatechange = function () {
      if (req.readyState == 4) {
        hideMask();
        if (req.status == 200) {
          enable_getcaptcha = false;
          captcha.focus();
          get_captcha.innerHTML = 'resend(' + count + ')s';

          timer = setInterval(function () {
            if (count > 0) {
              get_captcha.innerHTML = 'resend(' + count-- + ')s';
            } else {
              clearInterval(timer);
              enable_getcaptcha = true;
              get_captcha.className = 'get_captcha';
              get_captcha.innerHTML = 'get captcha';
            }
          }, 1000);
        } else {
          try {
            phone_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            phone_tip.innerHTML = 'Unknown error';
          }
          enable_getcaptcha = true;
          get_captcha.className = 'get_captcha';
          get_captcha.innerHTML = 'get captcha';
          phone_tip.style.display = 'block';
        }
      }
    }
  }

  function hideMask() {
    mask.style.display = 'none';
    resetModal();
  }

  function updateCaptcha() {
    var random = Date.now().toString().slice(-6);
    captchaImage.src = '/api/captcha?' + random;
  }


  //ajax request
  function createXMLHTTPRequest() {
    var xmlHttpRequest;
    if (window.XMLHttpRequest) {
      xmlHttpRequest = new XMLHttpRequest();
      if (xmlHttpRequest.overrideMimeType) {
        xmlHttpRequest.overrideMimeType("text/xml");
      }
    } else if (window.ActiveXObject) {
      xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
    }
    return xmlHttpRequest;
  }

  function checkPicCaptcha() {
    var reg = /^\w{6,}$/;
    var picCaptchaValue = picCaptcha.value;
    if(reg.test(picCaptchaValue)) {
      return true;
    } else {
      return false;
    }
  }

  function verifySubmit(e) {
    e.preventDefault();
    msg_tip.innerHTML = '';
    //phone
    if (/^1[3,4,5,6,7,8]\d{9}$/.test(phone.value)) {
      phone_tip.style.display = 'none';
      enable_phone = true;
    } else {
      phone_tip.innerHTML = 'please confirm the format of the phone';
      phone_tip.style.display = 'block';
      enable_phone = false;
    }
    //captcha
    if (/^\d{6}$/.test(captcha.value)) {
      captcha_tip.style.display = 'none';
      enable_captcha = true;
    } else {
      captcha_tip.innerHTML = 'please confirm the format of the captcha';
      captcha_tip.style.display = 'block';
      enable_captcha = false;
    }
    //password
    if (pwd.value.length < 8 || !/^[a-zA-Z0-9]/.test(pwd.value) || !/[a-z]+/.test(pwd.value) || !/[A-Z]+/.test(pwd.value) || !/[0-9]+/.test(pwd.value)) {
      pwd_tip.innerHTML = 'assword must be more than eight and contain both upper and lower case letters  and Numbers';
      pwd_tip.style.display = 'block';
      enable_pwd = false;
    } else {
      pwd_tip.style.display = 'none';
      enable_pwd = true;
    }
    //confirm pwd
    if (confirm_pwd.value === pwd.value) {
      confirm_pwd_tip.style.display = 'none';
      enable_confirm_pwd = true;
    } else {
      confirm_pwd_tip.innerHTML = 'Two input password is not consistent';
      confirm_pwd_tip.style.display = 'block';
      enable_confirm_pwd = false;
    }
    if (enable_phone && enable_captcha && enable_pwd && enable_confirm_pwd) {
      usubmit.disabled = true;
      getEncryptionKey();
    }
  }

  function formSubmit() {
    var cipherObject = CryptoJS.AES.encrypt(pwd.value, encryptionKey);
    var cipherText = cipherObject.toString();
    var data = {
      phone: phone.value,
      captcha: captcha.value,
      pwd: cipherText
    }
    var req = createXMLHTTPRequest();
    req.open("POST", "/api/password/reset", true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send(JSON.stringify(data));
    req.onreadystatechange = function () {
      if (req.readyState == 4) {
        if (req.status == 200) {
          msg_tip.className = 'msg-tip';
          countdownTimer = setInterval(function () {
            if (countdown === 0) {
              clearInterval(countdownTimer);
              countdownTimer = null;
              window.location = '/auth/login';
            } else {
              countdown--;
              msg_tip.innerHTML = 'Password change successfully, '+ countdown + ' seconds later jump to the login page';
            }
          }, 1000);
        } else {
          msg_tip.className = 'msg-tip error';
          usubmit.disabled = false;
          try {
            msg_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            msg_tip.innerHTML = "Unknown error"
          }
        }
      }
    }
  }

  function getEncryptionKey() {
    var random = Date.now().toString().slice(-6);
    var req = createXMLHTTPRequest();
    req.open("GET", "/api/password/uuid?" + random, true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send();
    req.onreadystatechange = function() {
      if(req.readyState === 4) {
        if(req.status === 200) {
          try {
            encryptionKey = JSON.parse(req.responseText).uuid;
            formSubmit();
          } catch(e) {
            msg_tip.className = 'msg-tip error';
            usubmit.disabled = false;
            msg_tip.innerHTML = "Unknown error, please try again"
          }
        } else {
          msg_tip.className = 'msg-tip error';
          usubmit.disabled = false;
          try {
            msg_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            msg_tip.innerHTML = "Unknown error"
          }
        }
      }
    }
  }
</script>
<% } else { %>
<div class="wrapper">
  <div class="header"></div>
  <div class="content">
    <div class="img-wrapper">
      <img src="<%= single_logo_url %>"/>
    </div>
    <div class="content-wrapper">
      <h4>重置密码</h4>
      <form id="uform" method="post" action="/auth/password/reset">
        <div>
          <input id="phone" name="phone" type="text" placeholder="请输入手机号" autofocus="autofocus"/>
          <div class="brewmaster_icon icon_phone"></div>
        </div>
        <span class="phone_tip"></span>
        <div>
          <input id="captcha" name="captcha" type="text" placeholder="请输入验证码"/>
          <div id="get_captcha" class="get_captcha">发送验证码</div>
          <div class="brewmaster_icon icon_captcha"></div>
        </div>
        <span class="captcha_tip"></span>
        <div>
          <input id="pwd" name="pwd" type="password" placeholder="请输入新密码"/>
          <div class="brewmaster_icon icon_pwd"></div>
        </div>
        <span class="pwd_tip"></span>
        <div>
          <input id="confirm_pwd" name="confirm_pwd" type="password" placeholder="确认密码"/>
          <div class="brewmaster_icon icon_pwd"></div>
        </div>
        <span class="confirm_pwd_tip"></span>
        <div class="msg-tip" id="msg-tip"></div>
        <input id="usubmit" name="usubmit" type="submit" value="提交"/>
      </form>
      <a href="/">返回登录</a>
    </div>
  </div>
  <div class="footer">
    <p><%= company %></p>
  </div>
</div>
<div class="mask" id="mask">
  <div class="modal" id="modal">
    <div class="modal-content-wrapper">
      <div class="modal-hd">请输入图形验证码</div>
      <div class="input-row">
        <input type="text" name="pic-captcha" id="pic-captcha" placeholder="图形验证码">
        <img src="/api/captcha?123456" alt="" class="image-captcha" id="image-captcha">
      </div>
      <div class="captcha-error-tip" id="captcha-error-tip">验证码格式不正确，请检查您的输入</div>
      <div class="modal-ft">
        <button id="submit-pic-captcha" class="submit-pic-captcha btn">确定</button>
        <button id="modal-cancel" class="modal-cancel btn btn-cancel">取消</button>
      </div>
    </div>
  </div>
</div>
<script src="/static/dist/crypto-js/crypto-js.min.js"></script>
<script>
  var phone = document.getElementById('phone'),
          captcha = document.getElementById('captcha'),
          get_captcha = document.getElementById('get_captcha'),
          pwd = document.getElementById('pwd'),
          confirm_pwd = document.getElementById('confirm_pwd'),
          usubmit = document.getElementById('usubmit'),
          phone_tip = document.getElementsByClassName('phone_tip')[0],
          captcha_tip = document.getElementsByClassName('captcha_tip')[0],
          pwd_tip = document.getElementsByClassName('pwd_tip')[0],
          confirm_pwd_tip = document.getElementsByClassName('confirm_pwd_tip')[0],
          msg_tip = document.getElementById('msg-tip');
          uform = document.getElementById('uform'),
          mask = document.getElementById('mask'),
          modal = document.getElementById('modal'),
          picSubBtn = document.getElementById('submit-pic-captcha'),
          picCaptcha = document.getElementById('pic-captcha'),
          captchaImage = document.getElementById('image-captcha'),
          captchaErrorTip = document.getElementById('captcha-error-tip'),
          modalCancelBtn = document.getElementById('modal-cancel'),
          enable_getcaptcha = true,
          enable_phone = false,
          enable_captcha = false,
          enable_pwd = false,
          enable_confirm_pwd = false,
          timer = null,
          countdown = 4,
          countdownTimer = null,   // 跳转定时器
          encryptionKey = null;    // 密钥

  get_captcha.onclick = showModal;
  picSubBtn.onclick = sendCaptcha;
  usubmit.onclick = verifySubmit;
  captchaImage.onclick = updateCaptcha;
  mask.onclick = hideMask;
  modalCancelBtn.onclick = hideMask;
  picCaptcha.onkeydown = function(evt) {
    if(evt.key === 'Enter') {
      sendCaptcha();
    }
  }
  modal.onclick = function(evt) {
    evt.stopPropagation();
  };

  resetModal();

  //ajax request
  function createXMLHTTPRequest() {
    var xmlHttpRequest;
    if (window.XMLHttpRequest) {
      xmlHttpRequest = new XMLHttpRequest();
      if (xmlHttpRequest.overrideMimeType) {
        xmlHttpRequest.overrideMimeType("text/xml");
      }
    } else if (window.ActiveXObject) {
      xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
    }
    return xmlHttpRequest;
  }

  function sendCaptcha() {
    var count = 60;

    var picCaptchaLegal = checkPicCaptcha();
    if (!picCaptchaLegal) {
      captchaErrorTip.style.display = 'block';
      return;
    }
      
    picSubBtn.disabled = true;
    var phoneData = JSON.stringify({
      'phone': phone.value,
      'captcha': picCaptcha.value
    });


    get_captcha.className += ' disabled';

    var req = createXMLHTTPRequest();
    req.open("POST", "/api/password/reset/phone-captcha", true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send(phoneData);
    req.onreadystatechange = function () {
      if (req.readyState == 4) {
        hideMask();
        if (req.status == 200) {
          enable_getcaptcha = false;
          captcha.focus();
          get_captcha.innerHTML = '重新发送(' + count + ')秒';

          timer = setInterval(function () {
            if (count > 0) {
              get_captcha.innerHTML = '重新发送(' + count-- + ')秒';
            } else {
              clearInterval(timer);
              enable_getcaptcha = true;
              get_captcha.className = 'get_captcha';
              get_captcha.innerHTML = '发送验证码';
            }
          }, 1000);
        } else {
          try {
            phone_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            phone_tip.innerHTML = '未知错误';
          }
          enable_getcaptcha = true;
          get_captcha.className = 'get_captcha';
          get_captcha.innerHTML = '发送验证码';
          phone_tip.style.display = 'block';
        }
      }
    }
  }

  function showModal() {
    if(enable_getcaptcha) {
      if(/^\d{11}$/.test(phone.value)) {
        phone_tip.style.display = "none";
        mask.style.display = 'block';
        picCaptcha.focus();
      } else {
        phone_tip.innerHTML = '请输入正确的格式';
        phone_tip.style.display = 'block';
      }
    }
  }

  function hideMask() {
    mask.style.display = 'none';
    resetModal();
  }

  function updateCaptcha() {
    var random = Date.now().toString().slice(-6);
    captchaImage.src = '/api/captcha?' + random;
  }

  // 输入验证
  function verifySubmit(e) {
    e.preventDefault();
    msg_tip.innerHTML = '';
    //phone
    if (/^1[3,4,5,6,7,8]\d{9}$/.test(phone.value)) {
      phone_tip.style.display = 'none';
      enable_phone = true;
    } else {
      phone_tip.innerHTML = '请输入正确的格式';
      phone_tip.style.display = 'block';
      enable_phone = false;
    }
    //captcha
    if (/^\d{6}$/.test(captcha.value)) {
      captcha_tip.style.display = 'none';
      enable_captcha = true;
    } else {
      captcha_tip.innerHTML = '请输入正确的格式';
      captcha_tip.style.display = 'block';
      enable_captcha = false;
    }
    //password
    if (pwd.value.length < 8 || !/^[a-zA-Z0-9]/.test(pwd.value) || !/[a-z]+/.test(pwd.value) || !/[A-Z]+/.test(pwd.value) || !/[0-9]+/.test(pwd.value)) {
      pwd_tip.innerHTML = '密码必须8位以上且同时包含大小写字母和数字';
      pwd_tip.style.display = 'block';
      enable_pwd = false;
    } else {
      pwd_tip.style.display = 'none';
      enable_pwd = true;
    }
    //confirm pwd
    if (confirm_pwd.value === pwd.value) {
      confirm_pwd_tip.style.display = 'none';
      enable_confirm_pwd = true;
    } else {
      confirm_pwd_tip.innerHTML = '两次输入的密码不一致';
      confirm_pwd_tip.style.display = 'block';
      enable_confirm_pwd = false;
    }
    if (enable_phone && enable_captcha && enable_pwd && enable_confirm_pwd) {
      usubmit.disabled = true;
      getEncryptionKey();
    }
  }

  // 表单提交
  function formSubmit() {
    var cipherObject = CryptoJS.AES.encrypt(pwd.value, encryptionKey);
    var cipherText = cipherObject.toString();
    var data = {
      phone: phone.value,
      captcha: captcha.value,
      pwd: cipherText
    }
    var req = createXMLHTTPRequest();
    req.open("POST", "/api/password/reset", true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send(JSON.stringify(data));
    req.onreadystatechange = function () {
      if (req.readyState == 4) {
        if (req.status == 200) {
          msg_tip.className = 'msg-tip';
          countdownTimer = setInterval(function () {
            if (countdown === 0) {
              clearInterval(countdownTimer);
              countdownTimer = null;
              window.location = '/auth/login';
            } else {
              countdown--;
              msg_tip.innerHTML = '密码修改成功，' + countdown + '秒后跳转到登录页面';
            }
          }, 1000);
        } else {
          msg_tip.className = 'msg-tip error';
          usubmit.disabled = false;
          try {
            msg_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            msg_tip.innerHTML = "未知错误"
          }
        }
      }
    }
  }

  // 提交前获取密钥
  function getEncryptionKey() {
    var random = Date.now().toString().slice(-6);
    var req = createXMLHTTPRequest();
    req.open("GET", "/api/password/uuid?" + random, true);
    req.setRequestHeader("Content-Type", "application/json");
    req.send();
    req.onreadystatechange = function() {
      if(req.readyState === 4) {
        if(req.status === 200) {
          try {
            encryptionKey = JSON.parse(req.responseText).uuid;
            formSubmit();
          } catch(e) {
            msg_tip.className = 'msg-tip error';
            usubmit.disabled = false;
            msg_tip.innerHTML = "未知错误，请重新尝试"
          }
        } else {
          msg_tip.className = 'msg-tip error';
          usubmit.disabled = false;
          try {
            msg_tip.innerHTML = JSON.parse(req.responseText).message;
          } catch (error) {
            msg_tip.innerHTML = "未知错误"
          }
        }
      }
    }
  }

  function resetModal() {
    var random = Date.now().toString().slice(-6);
    picCaptcha.value = '';
    picSubBtn.disabled = false;
    captchaImage.src = '/api/captcha?' + random;
    captchaErrorTip.style.display = 'none';
  }

  function checkPicCaptcha() {
    var reg = /^\w{6,}$/;
    var picCaptchaValue = picCaptcha.value;
    if(reg.test(picCaptchaValue)) {
      return true;
    } else {
      return false;
    }
  }
</script>
<% } %>

</body>
</html>
